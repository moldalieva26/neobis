{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica;\f2\fnil\fcharset0 Menlo-Regular;
\f3\fswiss\fcharset0 ArialMT;}
{\colortbl;\red255\green255\blue255;\red63\green127\blue95;\red77\green80\blue85;\red255\green255\blue255;
}
{\*\expandedcolortbl;;\csgenericrgb\c24706\c49804\c37255;\cssrgb\c37255\c38824\c40784;\cssrgb\c100000\c100000\c100000;
}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 APi documentation\
\
Customer\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\b0 \cf0 1.Get all customers\
	GET /customers/all\
 	\'97\
 	200 ok\
\
2.Get customer by id\
	GET /customers/\{id\}\
	id\
	200 ok\
\
3. Create customer \
	POST /customers\
	\'97?\
	200 ok\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 4. Get customer by email\
	GET /customers\
	email\
	200 ok\
\
5. Delete customer\
	DELETE /customers/\{id\}\
	id\
	200 ok\
\
6. Update customer\
	PUT /customers/\{id\}\
	id \
	200 ok\
\
\pard\pardeftab720\partightenfactor0

\f2 \cf2 // entity \ul ne\ulnone  \ul doljen\ulnone  \ul peredavatsy\ulnone  \ul vo\ulnone  front. u can pass only model. \cf0 \
\cf2 // rename model to entity\cf0 \
\cf2 // \ul vzat\ulnone ' product \ul cherez\ulnone  foreign key: custom \ul endpoint\cf0 \ulnone \
\cf2 // \ul poluchit\ulnone ' \ul vse\ulnone  order details \ul cherez\ulnone  order model JDBC \cf0 \
\cf2 // model with many fields: join different model classes: \ul iz\ulnone  \ul chetyreh\ulnone  entities \ul otdat\ulnone ' \ul na\ulnone  front \cf0 \
\cf2 // how to generate preset CRUDs\cf0 \
\cf2 // add swagger \cf0 \
\cf2 // test last \ul endpoints\cf0 \ulnone \
\cf2 // \ul flyway\ulnone  migration 
\f1 \cf0 \
\pard\pardeftab720\sl280\partightenfactor0

\f3 \cf3 \cb4 \expnd0\expndtw0\kerning0
Design APIs that will fulfill the requirements, and create a documentation for the endpoints. Your descriptions need to contain the following:\
1. Brief description (what it does and which requirement it fulfills)\
2. Path (including REST method)\
3. Parameters\
4. Response\
\
For example:\
1. Update an address\
2. POST /api/v1/address\
3. address_id\
4. None (200 OK)}